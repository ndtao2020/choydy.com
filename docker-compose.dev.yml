version: "3.9"

networks:
  redis:
    driver: bridge
  postgres:
    driver: bridge
  backend:
    driver: bridge
  frontend:
    driver: bridge

services:
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    command: redis-server --appendonly yes --requirepass 12345678
    volumes:
      - ./redis:/data
    networks:
      - redis

  postgres:
    image: postgres:alpine
    container_name: postgres
    restart: always
    networks:
      - postgres
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678x@X

  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      - redis
      - postgres
    ports:
      - "8080:8080"
    networks:
      - redis
      - postgres
    restart: always
    environment:
      SPRING_KEYSTORE_PATH: ${SPRING_KEYSTORE_PATH}
      SPRING_KEYSTORE_ALIAS: ${SPRING_KEYSTORE_ALIAS}
      SPRING_KEYSTORE_PASS: ${SPRING_KEYSTORE_PASS}
      SPRING_SENDGRID_SENDER: ${SPRING_SENDGRID_SENDER}
      SPRING_SENDGRID_API_KEY: ${SPRING_SENDGRID_API_KEY}
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 12345678x@X
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_USERNAME: default
      SPRING_REDIS_PASSWORD: 12345678

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    depends_on:
      - backend
      - frontend
    networks:
      - backend
      - frontend
    ports:
      - 80:80
