version: "3.9"

networks:
  redis:
    driver: bridge
  postgres:
    driver: bridge
  minio:
    driver: bridge
  backend:
    driver: bridge

volumes:
  web_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/data

services:
  redis:
    image: redis:6.2-alpine
    restart: always
    command: redis-server --appendonly yes --requirepass cFzNJk3g2o
#    ports:
#      - 6379:6379
    networks:
      - redis
    volumes:
      - ./data/redis:/data

  postgres:
    image: postgres:14.1-alpine
    restart: always
    networks:
      - postgres
#    ports:
#      - 5432:5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    env_file:
      - ./variables.env
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: choydy

  minio:
    image: minio/minio
    restart: always
    networks:
      - minio
    volumes:
      - web_data:/data
    env_file:
      - ./variables.env
    ports:
      - 9000:9000
      - 9001:9001
    command: server /data --console-address ":9001"

  backend:
    image: taoqn/choydy-com
    restart: always
    depends_on:
      - redis
      - postgres
    ports:
      - 8080:8080
    volumes:
      - web_data:/work/upload
    networks:
      - redis
      - postgres
      - minio
      - backend
    env_file:
      - ./variables.env
    environment:
      APP_S3_URL: http://minio:9000
      QUARKUS_UPLOAD_FOLDER: /work/upload
      QUARKUS_REDIS_HOSTS: redis://default:cFzNJk3g2o@redis:6379
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/choydy
      QUARKUS_KEYSTORE_PATH: /work/key/keystore.jks

#  nginx:
#    image: nginx:1.21-alpine
#    restart: always
#    depends_on:
#      - backend
#    networks:
#      - backend
#    volumes:
#      - ./nginx:/etc/nginx/conf.d
#    ports:
#      - 80:80
#      - 443:443
