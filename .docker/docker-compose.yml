version: "3.9"

networks:
  redis:
    driver: bridge
  postgres:
    driver: bridge
  backend:
    driver: bridge
  nginx:
    driver: bridge

services:
  redis:
    image: redis:6-alpine
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    networks:
      - redis
    volumes:
      - ./data/redis:/data

  postgres:
    image: postgres:14-alpine
    restart: always
    networks:
      - postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    env_file: 
      - ./variables.env
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  backend:
    image: taoqn/choydy-com
    restart: always
    depends_on:
      - redis
      - postgres
    ports:
      - 8080:8080
    volumes:
      - ./data/backend:/work/upload
    networks:
      - redis
      - postgres
      - backend
    env_file: 
      - ./variables.env
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      QUARKUS_DATASOURCE_USERNAME: ${POSTGRES_USER}
      QUARKUS_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      QUARKUS_REDIS_HOSTS: redis://default:${REDIS_PASSWORD}@redis:6379

  nginx:
    image: nginx:1.21-alpine
    restart: always
    networks:
      - backend
      - nginx
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./nginx:/etc/nginx/conf.d
    ports:
      - 80:80
      - 443:443
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: always
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
